# Voice AI: Voice Control Assistant

## Overview
Next.js app with voice commands via WebRTC and OpenAI.

## Structure
- `app/` - Next.js App Router code
  - `page.tsx` - Entry point, renders ChatGPT component
  - `layout.tsx` - Root layout
  - `globals.css` - Global styles
  - `chatgpt.tsx` - OpenAI voice processing
  - `api/` - Backend endpoints
    - `log/` - Application logging
- `hooks/` - Custom React hooks
  - `use-webrtc.ts` - Voice capture via WebRTC
  - `logger.ts` - Logging utilities
- `public/` - Static assets
- `.env.local` - Environment variables
  - `NEXT_PUBLIC_OPENAI_API_KEY` - OpenAI API key
- `next.config.ts` - Next.js config
- `package.json` - Dependencies
- `tailwind.config.ts` - Styling config
- `tsconfig.json` - TypeScript config

## Flow
1. `page.tsx` â†’ `ChatGPT` component
2. WebRTC captures voice
3. ChatGPT processes commands
4. Voice assistant responds to user

## Setup
1. Create `.env.local` from example
2. Add OpenAI API key
3. Run `npm run dev`
4. Open http://localhost:3000 